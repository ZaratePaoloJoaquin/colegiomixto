<!DOCTYPE html>
<html lang="es">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Detalles del Estudiante</title>
</head>
<body>
    <%- include('partials/header') %>

    <div class="container">
        <div class="student-info">
            <h1>Detalles del Estudiante</h1>
            <div class="info-grid">
                <p><strong>Nombres:</strong> <%= student.firstName %></p>
                <p><strong>Apellidos:</strong> <%= student.lastName %></p>
                <p><strong>DNI:</strong> <%= student.dni %></p>
                <p><strong>Edad:</strong> <%= student.age %></p>
                <p><strong>Grado:</strong> <%= student.grade %></p>
                <% if (student.photo) { %>
                    <div class="student-photo">
                        <img src="/<%= student.photo %>" alt="Foto del Estudiante">
                    </div>
                <% } %>
            </div>
        </div>

        <div class="action-buttons">
            <a href="/students/<%= student._id %>/edit" class="btn btn-primary">Editar</a>
            <form action="/students/<%= student._id %>/delete" method="POST" onsubmit="return confirm('¿Está seguro que desea eliminar este estudiante? Esta acción no se puede deshacer.');">
                <button type="submit" class="btn btn-danger">
                    Eliminar Estudiante
                </button>
            </form>
            <a href="/students" class="btn btn-secondary">Volver a la Lista</a>
        </div>

        <div class="records-section">
            <div class="record-box" onclick="showTeacherForm()">
                <h3>Registro del Profesor</h3>
                <i class="fas fa-chalkboard-teacher"></i>
            </div>
            <div class="record-box" onclick="showAssistantForm()">
                <h3>Registro del Auxiliar</h3>
                <i class="fas fa-user-tie"></i>
            </div>
        </div>

        <!-- Modal para Registro del Profesor -->
        <div id="teacherModal" class="modal">
            <div class="modal-content">
                <span class="close" onclick="closeTeacherModal()">&times;</span>
                <h2>Registro del Profesor</h2>
                <form id="teacherForm" action="/students/<%= student._id %>/teacher-record" method="POST">
                    <div class="form-group">
                        <label for="date">Fecha:</label>
                        <input type="date" id="date" name="date" required>
                    </div>

                    <div class="form-group">
                        <label for="subject">Materia:</label>
                        <select id="subject" name="subject" required>
                            <option value="">Seleccionar materia</option>
                            <option value="matematicas">Matemáticas</option>
                            <option value="lenguaje">Lenguaje</option>
                            <option value="ciencias">Ciencias Naturales</option>
                            <option value="historia">Historia</option>
                            <option value="geografia">Geografía</option>
                            <option value="fisica">Física</option>
                            <option value="quimica">Química</option>
                            <option value="biologia">Biología</option>
                            <option value="literatura">Literatura</option>
                            <option value="ingles">Inglés</option>
                            <option value="educacion_fisica">Educación Física</option>
                            <option value="arte">Arte</option>
                            <option value="musica">Música</option>
                            <option value="computacion">Computación</option>
                            <option value="civica">Educación Cívica</option>
                            <option value="religion">Religión</option>
                            <option value="filosofia">Filosofía</option>
                            <option value="economia">Economía</option>
                            <option value="psicologia">Psicología</option>
                            <option value="tutoria">Tutoría</option>
                        </select>
                    </div>

                    <div class="form-group">
                        <label for="attendance">Asistencia:</label>
                        <select id="attendance" name="attendance" required>
                            <option value="presente">Presente</option>
                            <option value="ausente">Ausente</option>
                            <option value="tardanza">Tardanza</option>
                        </select>
                    </div>

                    <div class="form-group">
                        <label for="notes">Observaciones:</label>
                        <textarea id="notes" name="notes" rows="4"></textarea>
                    </div>

                    <div class="button-group">
                        <button type="submit" class="submit-btn">Guardar Registro</button>
                        <button type="button" class="view-btn" onclick="showRecordsModal()">Mostrar Registros</button>
                    </div>
                </form>
            </div>
        </div>

        <!-- Add new modal for showing records -->
        <div id="recordsModal" class="modal">
            <div class="modal-content records-modal">
                <span class="close" onclick="closeRecordsModal()">&times;</span>
                <h2>Registros del Estudiante</h2>
                
                <!-- Filters -->
                <div class="filters">
                    <div class="filter-group">
                        <label for="filterSubject">Materia:</label>
                        <select id="filterSubject" onchange="filterRecords()">
                            <option value="">Todas las materias</option>
                            <option value="matematicas">Matemáticas</option>
                            <option value="lenguaje">Lenguaje</option>
                            <option value="ciencias">Ciencias Naturales</option>
                            <option value="historia">Historia</option>
                            <option value="geografia">Geografía</option>
                            <option value="fisica">Física</option>
                            <option value="quimica">Química</option>
                            <option value="biologia">Biología</option>
                            <option value="literatura">Literatura</option>
                            <option value="ingles">Inglés</option>
                            <option value="educacion_fisica">Educación Física</option>
                            <option value="arte">Arte</option>
                            <option value="musica">Música</option>
                            <option value="computacion">Computación</option>
                            <option value="civica">Educación Cívica</option>
                            <option value="religion">Religión</option>
                            <option value="filosofia">Filosofía</option>
                            <option value="economia">Economía</option>
                            <option value="psicologia">Psicología</option>
                            <option value="tutoria">Tutoría</option>
                        </select>
                    </div>

                    <div class="filter-group">
                        <label for="filterDate">Fecha:</label>
                        <input type="date" id="filterDate" onchange="filterRecords()">
                    </div>

                    <div class="filter-group">
                        <label for="filterAttendance">Asistencia:</label>
                        <select id="filterAttendance" onchange="filterRecords()">
                            <option value="">Todos</option>
                            <option value="presente">Presente</option>
                            <option value="ausente">Ausente</option>
                            <option value="tardanza">Tardanza</option>
                        </select>
                    </div>
                </div>

                <!-- Records Table -->
                <div class="records-table">
                    <table>
                        <thead>
                            <tr>
                                <th>Fecha</th>
                                <th>Materia</th>
                                <th>Asistencia</th>
                                <th>Observaciones</th>
                            </tr>
                        </thead>
                        <tbody id="recordsTableBody">
                            <!-- Records will be populated here via JavaScript -->
                        </tbody>
                    </table>
                </div>
            </div>
        </div>

        <!-- Add this after the teacher modal -->
        <div id="assistantModal" class="modal">
            <div class="modal-content">
                <span class="close" onclick="closeAssistantModal()">&times;</span>
                <h2>Registro del Auxiliar</h2>
                <form id="assistantForm" action="/students/<%= student._id %>/assistant-record" method="POST">
                    <div class="form-group">
                        <label for="assistantDate">Fecha:</label>
                        <input type="date" id="assistantDate" name="date" required>
                    </div>

                    <div class="form-group">
                        <label for="assistantAttendance">Asistencia:</label>
                        <select id="assistantAttendance" name="attendance" required>
                            <option value="presente">Presente</option>
                            <option value="ausente">Ausente</option>
                            <option value="tardanza">Tardanza</option>
                        </select>
                    </div>

                    <div class="form-group">
                        <label for="uniform">Uniforme:</label>
                        <select id="uniform" name="uniform" required>
                            <option value="correcto">Correcto</option>
                            <option value="incorrecto">Incorrecto</option>
                            <option value="incompleto">Incompleto</option>
                        </select>
                    </div>

                    <div class="form-group">
                        <label for="assistantNotes">Observaciones:</label>
                        <textarea id="assistantNotes" name="notes" rows="4"></textarea>
                    </div>

                    <div class="button-group">
                        <button type="submit" class="submit-btn">Guardar Registro</button>
                        <button type="button" class="view-btn" onclick="showAssistantRecordsModal()">
                            Mostrar Registros
                        </button>
                    </div>
                </form>
            </div>
        </div>

        <!-- Assistant Records Modal -->
        <div id="assistantRecordsModal" class="modal">
            <div class="modal-content records-modal">
                <span class="close" onclick="closeAssistantRecordsModal()">&times;</span>
                <h2>Registros de Auxiliar</h2>
                
                <!-- Filters -->
                <div class="filters">
                    <div class="filter-group">
                        <label for="filterAssistantDate">Fecha:</label>
                        <input type="date" id="filterAssistantDate" onchange="filterAssistantRecords()">
                    </div>

                    <div class="filter-group">
                        <label for="filterAssistantAttendance">Asistencia:</label>
                        <select id="filterAssistantAttendance" onchange="filterAssistantRecords()">
                            <option value="">Todos</option>
                            <option value="presente">Presente</option>
                            <option value="ausente">Ausente</option>
                            <option value="tardanza">Tardanza</option>
                        </select>
                    </div>

                    <div class="filter-group">
                        <label for="filterUniform">Uniforme:</label>
                        <select id="filterUniform" onchange="filterAssistantRecords()">
                            <option value="">Todos</option>
                            <option value="correcto">Correcto</option>
                            <option value="incorrecto">Incorrecto</option>
                            <option value="incompleto">Incompleto</option>
                        </select>
                    </div>
                </div>

                <!-- Records Table -->
                <div class="records-table">
                    <table>
                        <thead>
                            <tr>
                                <th>Fecha</th>
                                <th>Asistencia</th>
                                <th>Uniforme</th>
                                <th>Observaciones</th>
                            </tr>
                        </thead>
                        <tbody id="assistantRecordsTableBody">
                            <!-- Records will be populated here via JavaScript -->
                        </tbody>
                    </table>
                </div>
            </div>
        </div>

        <style>
            .container {
                max-width: 1200px;
                margin: 20px auto;
                padding: 20px;
            }

            .student-info {
                background: rgba(255, 255, 255, 0.95);
                padding: 25px;
                border-radius: 10px;
                box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
                margin-bottom: 20px;
            }

            .info-grid {
                display: grid;
                grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
                gap: 20px;
            }

            .records-section {
                display: flex;
                gap: 20px;
                margin-top: 20px;
            }

            .record-box {
                flex: 1;
                background: rgba(255, 255, 255, 0.95);
                padding: 25px;
                border-radius: 10px;
                box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
                cursor: pointer;
                text-align: center;
                transition: transform 0.2s;
            }

            .record-box:hover {
                transform: translateY(-5px);
            }

            .modal {
                display: none;
                position: fixed;
                top: 0;
                left: 0;
                width: 100%;
                height: 100%;
                background-color: rgba(0,0,0,0.5);
                z-index: 1000;
            }

            .modal-content {
                background: white;
                margin: 5% auto;
                padding: 20px;
                width: 80%;
                max-width: 600px;
                border-radius: 10px;
                position: relative;
            }

            .close {
                position: absolute;
                right: 20px;
                top: 10px;
                font-size: 28px;
                cursor: pointer;
            }

            .form-group {
                margin-bottom: 15px;
            }

            .form-group label {
                display: block;
                margin-bottom: 5px;
                font-weight: bold;
            }

            .form-group input,
            .form-group select,
            .form-group textarea {
                width: 100%;
                padding: 8px;
                border: 1px solid #ddd;
                border-radius: 4px;
            }

            .submit-btn {
                background-color: #2ecc71;
                color: white;
                padding: 10px 20px;
                border: none;
                border-radius: 4px;
                cursor: pointer;
                width: 100%;
            }

            .student-photo img {
                max-width: 150px;
                border-radius: 5px;
            }

            .action-buttons {
                margin: 20px 0;
                display: flex;
                gap: 10px;
            }

            .btn {
                padding: 10px 20px;
                border: none;
                border-radius: 4px;
                cursor: pointer;
                text-decoration: none;
                display: inline-block;
            }

            .btn-primary {
                background-color: #3498db;
                color: white;
            }

            .btn-secondary {
                background-color: #95a5a6;
                color: white;
            }

            .btn-danger {
                background-color: #e74c3c;
                color: white;
            }

            .btn-danger:hover {
                background-color: #c0392b;
            }

            .button-group {
                display: flex;
                gap: 10px;
                margin-top: 20px;
            }

            .view-btn {
                background-color: #3498db;
                color: white;
                padding: 10px 20px;
                border: none;
                border-radius: 4px;
                cursor: pointer;
                flex: 1;
            }

            .records-modal {
                width: 90%;
                max-width: 900px;
                max-height: 80vh;
                overflow-y: auto;
            }

            .filters {
                display: flex;
                gap: 20px;
                margin-bottom: 20px;
                padding: 15px;
                background: #f8f9fa;
                border-radius: 5px;
            }

            .filter-group {
                flex: 1;
            }

            .filter-group label {
                display: block;
                margin-bottom: 5px;
            }

            .filter-group select,
            .filter-group input {
                width: 100%;
                padding: 8px;
                border: 1px solid #ddd;
                border-radius: 4px;
            }

            .records-table {
                overflow-x: auto;
            }

            .records-table table {
                width: 100%;
                border-collapse: collapse;
            }

            .records-table th,
            .records-table td {
                padding: 12px;
                text-align: left;
                border-bottom: 1px solid #ddd;
            }

            .records-table th {
                background-color: #3498db;
                color: white;
            }
        </style>

        <script>
            function showTeacherForm() {
                document.getElementById('teacherModal').style.display = 'block';
            }

            function closeTeacherModal() {
                document.getElementById('teacherModal').style.display = 'none';
            }

            // Close modal when clicking outside
            window.onclick = function(event) {
                if (event.target == document.getElementById('teacherModal')) {
                    closeTeacherModal();
                }
            }

            function showRecordsModal() {
                document.getElementById('recordsModal').style.display = 'block';
                loadRecords();
            }

            function closeRecordsModal() {
                document.getElementById('recordsModal').style.display = 'none';
            }

            async function loadRecords() {
                try {
                    const response = await fetch(`/students/<%= student._id %>/teacher-records`);
                    if (!response.ok) {
                        throw new Error('Error al cargar registros');
                    }
                    const records = await response.json();
                    displayRecords(records);
                } catch (error) {
                    console.error('Error:', error);
                    alert('Error al cargar los registros');
                }
            }

            function displayRecords(records) {
                const tbody = document.getElementById('recordsTableBody');
                tbody.innerHTML = '';

                if (records.length === 0) {
                    tbody.innerHTML = '<tr><td colspan="4" class="text-center">No hay registros disponibles</td></tr>';
                    return;
                }

                records.forEach(record => {
                    // Adjust date display
                    const recordDate = new Date(record.date);
                    recordDate.setHours(recordDate.getHours());
                    
                    const formattedDate = recordDate.toLocaleDateString('es-ES', {
                        year: 'numeric',
                        month: '2-digit',
                        day: '2-digit'
                    });

                    const row = document.createElement('tr');
                    row.innerHTML = `
                        <td>${formattedDate}</td>
                        <td>${getSubjectName(record.subject)}</td>
                        <td>${getAttendanceStatus(record.attendance)}</td>
                        <td>${record.notes || '-'}</td>
                    `;
                    tbody.appendChild(row);
                });
            }

            function getSubjectName(subject) {
                const subjects = {
                    'matematicas': 'Matemáticas',
                    'lenguaje': 'Lenguaje',
                    'ciencias': 'Ciencias Naturales',
                    // ... add all other subjects ...
                };
                return subjects[subject] || subject;
            }

            function getAttendanceStatus(status) {
                const statuses = {
                    'presente': 'Presente',
                    'ausente': 'Ausente',
                    'tardanza': 'Tardanza'
                };
                return statuses[status] || status;
            }

            async function filterRecords() {
                try {
                    const subject = document.getElementById('filterSubject').value;
                    const date = document.getElementById('filterDate').value;
                    const attendance = document.getElementById('filterAttendance').value;

                    // Build query string
                    const queryParams = new URLSearchParams();
                    if (subject) queryParams.append('subject', subject);
                    if (date) {
                        // Ensure date is in correct format
                        const filterDate = new Date(date);
                        queryParams.append('date', filterDate.toISOString().split('T')[0]);
                    }
                    if (attendance) queryParams.append('attendance', attendance);

                    const response = await fetch(
                        `/students/<%= student._id %>/teacher-records?${queryParams.toString()}`
                    );
                    
                    if (!response.ok) {
                        throw new Error('Error al filtrar registros');
                    }
                    
                    const records = await response.json();
                    displayRecords(records);
                } catch (error) {
                    console.error('Error:', error);
                    alert('Error al filtrar los registros');
                }
            }

            // Add debug logging
            function debugDateComparison(filterDate, recordDate) {
                console.log('Filter Date:', filterDate);
                console.log('Record Date:', recordDate);
                console.log('Comparison Result:', filterDate.getTime() === recordDate.getTime());
            }

            // Add these functions for assistant modal
            function showAssistantForm() {
                document.getElementById('assistantModal').style.display = 'block';
            }

            function closeAssistantModal() {
                document.getElementById('assistantModal').style.display = 'none';
            }

            function showAssistantRecordsModal() {
                document.getElementById('assistantRecordsModal').style.display = 'block';
                loadAssistantRecords();
            }

            function closeAssistantRecordsModal() {
                document.getElementById('assistantRecordsModal').style.display = 'none';
            }

            async function loadAssistantRecords() {
                try {
                    const response = await fetch(`/students/<%= student._id %>/assistant-records`);
                    if (!response.ok) {
                        throw new Error('Error al cargar registros');
                    }
                    const records = await response.json();
                    displayAssistantRecords(records);
                } catch (error) {
                    console.error('Error:', error);
                    alert('Error al cargar los registros');
                }
            }

            function displayAssistantRecords(records) {
                const tbody = document.getElementById('assistantRecordsTableBody');
                tbody.innerHTML = '';

                if (records.length === 0) {
                    tbody.innerHTML = '<tr><td colspan="4" class="text-center">No hay registros disponibles</td></tr>';
                    return;
                }

                records.forEach(record => {
                    const recordDate = new Date(record.date);
                    const formattedDate = recordDate.toLocaleDateString('es-ES', {
                        year: 'numeric',
                        month: '2-digit',
                        day: '2-digit'
                    });

                    const row = document.createElement('tr');
                    row.innerHTML = `
                        <td>${formattedDate}</td>
                        <td>${getAttendanceStatus(record.attendance)}</td>
                        <td>${getUniformStatus(record.uniform)}</td>
                        <td>${record.notes || '-'}</td>
                    `;
                    tbody.appendChild(row);
                });
            }

            function getUniformStatus(status) {
                const statuses = {
                    'correcto': 'Correcto',
                    'incorrecto': 'Incorrecto',
                    'incompleto': 'Incompleto'
                };
                return statuses[status] || status;
            }

            async function filterAssistantRecords() {
                try {
                    const date = document.getElementById('filterAssistantDate').value;
                    const attendance = document.getElementById('filterAssistantAttendance').value;
                    const uniform = document.getElementById('filterUniform').value;

                    const queryParams = new URLSearchParams();
                    if (date) queryParams.append('date', date);
                    if (attendance) queryParams.append('attendance', attendance);
                    if (uniform) queryParams.append('uniform', uniform);

                    const response = await fetch(
                        `/students/<%= student._id %>/assistant-records?${queryParams.toString()}`
                    );
                    
                    if (!response.ok) {
                        throw new Error('Error al filtrar registros');
                    }
                    
                    const records = await response.json();
                    displayAssistantRecords(records);
                } catch (error) {
                    console.error('Error:', error);
                    alert('Error al filtrar los registros');
                }
            }
        </script>
    </div>
</body>
</html> 